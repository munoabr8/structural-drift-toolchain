# Makefile – Structural Enforcement

STRUCTURE_SPEC=./system/structure.spec
VALIDATOR_RF=./system/validate_structure.sh
CONTEXT_CHECK=./attn/context-status.sh
SNAPSHOT_GEN_RF=../debugtools/structureDebugging.sh

#.PHONY: aggregate-spec lock-structure doctor health validate-modules test-garbage-detector test-negative-structure #precommit-check check-structure-drift snapshot-structure enforce-structure context-health snapshot-and-promote detect
   

health:
	@echo "🩺 Running full system health check..."
	@make check-structure-drift
	@make enforce-structure
	@make context-health

#generate-module-specs:
#	@bash tools/generate_all_module_specs.sh

validate-modules:
	@echo "🔍 Validating modules (excluding .structure.ignore)..."
	@IGNORE=$(shell cat .structure.ignore 2>/dev/null | xargs) && \
	for mod in $(shell find . -maxdepth 1 -type d ! -name "." ! -name ".git" ! -name "system" | sed 's|^\./||'); do \
	  echo $$IGNORE | grep -wq "$$mod" && echo "⏭️  Skipping ignored module: $$mod" && continue; \
	  echo "🔍 Validating $$mod..."; \
	  bash system/validate_structure.sh "$$mod/structure.spec"; \
	done


diff-structure:
	@echo "🔍 Diffing current structure against system/structure.spec..."
	@test -f $(SNAPSHOT_GEN) || (echo "❌ Missing: $(SNAPSHOT_GEN)" && exit 1)
	@bash $(SNAPSHOT_GEN) generate_structure_spec . > .structure.snapshot
	@diff -u system/structure.spec .structure.snapshot || echo "⚠️  Drift detected — review above diff."


 
aggregate-spec:
	@bash tools/aggregate_structure.sh

precommit-check:
	@make check-structure-drift

test-all:
	@make test-structure
	@make test-garbage-detector
	@make test-negative-structure

#install-hooks:
	#@bash tools/install-hooks.sh

test-structure:
	@echo "🧪 Running structure validation tests..."
	@bats system-test/structure_validator

test-negative-structure:
	@echo "❗ Running negative structure validation tests..."
	@bats system-test/structure_negative_tests

test-garbage-detector:
	@echo "🧪 Running garbage_detector validation tests..."
	@bats system-test/garbage_detector
	

doctor:
	@bash ./tools/doctor.sh $(STRUCTURE_SPEC)
 
detect-garbage:
	@bash ./tools/detect_garbage.sh $(STRUCTURE_SPEC)

check-structure-drift:
	@echo "🚨 Enforcing structure integrity..."
	@test -f $(SNAPSHOT_GEN) || (echo "❌ Missing: $(SNAPSHOT_GEN)" && exit 1)

	@bash $(SNAPSHOT_GEN) generate_structure_spec . > .structure.snapshot || echo "⚠️ Snapshot generation non-critical failure (check manually)"
	@diff -u $(STRUCTURE_SPEC) .structure.snapshot || echo "❗ Structure drift detected — please snapshot-and-promote if intended."


 	# @rm -f .structure.snapshot

enforce-structure:
	@test -f $(STRUCTURE_SPEC) || (echo "❌ Missing spec file: $(STRUCTURE_SPEC)" && exit 1)
	@test -x $(VALIDATOR) || (echo "❌ Validator not executable: $(VALIDATOR)" && exit 1)
	@echo "🔍 Enforcing structure from $(STRUCTURE_SPEC)..."
	@bash $(VALIDATOR) $(STRUCTURE_SPEC)

context-health:
	@echo "🧠 Validating project context..."
	@bash $(CONTEXT_CHECK)

snapshot-and-promote:
	@test -f .structure.snapshot || (echo "❌ Missing snapshot file: .structure.snapshot" && exit 1)
	@echo "🚀 Promoting snapshot to enforced structure.spec..."
	@cp .structure.snapshot $(STRUCTURE_SPEC)
	@echo "✅ structure.spec has been updated."

snapshot-structure:
	@test -f $(SNAPSHOT_GEN) || (echo "❌ Missing: $(SNAPSHOT_GEN)" && exit 1)
	@echo "📸 Generating current structure snapshot..."
	@bash $(SNAPSHOT_GEN) generate_structure_spec . > .structure.snapshot; \
# 	EXIT_CODE=$$?; \
# 	echo "🔁 Return code from generate_structure_spec: $$EXIT_CODE"; \
# 	exit $$EXIT_CODE

lock-structure:
	@make snapshot-structure && make enforce-structure && cp .structure.snapshot system/structure.spec && git add system/structure.spec && echo "✅ structure.spec updated and staged."
 


# If you’re ever unsure if a shell block runs in a subshell, insert:

# echo "PID: $$"

# inside and outside the block. If PIDs differ — you’re in a subshell.


