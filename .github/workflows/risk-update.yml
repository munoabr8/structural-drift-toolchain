name: Risk Update
on:
  workflow_dispatch:
    inputs:
      ref:
        description: "Branch/PR/SHA (e.g., main, dev, refs/pull/123/merge, a1b2c3)"
        required: false
        default: "dev"
      dry_run:
        description: "Print plan only"
        type: boolean
        default: false
      risk_log_path:
        description: "Path to risk log file"
        required: false
        default: "risk.log"

  
  push:
    paths:
      - ".github/workflows/risk-update.yml"
      - "./bin/risk_pull.sh"

jobs:
  update:
    runs-on: ubuntu-latest
    env:
      # single source of truth for risk log path
      RISK_LOG_PATH: ${{ inputs.risk_log_path || 'risk.log' }}
    steps:
      - name: Choose ref
        id: pick
        run: |
          set -euo pipefail
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && -n "${{ inputs.ref }}" ]]; then
            echo "ref=${{ inputs.ref }}" >> "$GITHUB_OUTPUT"
          else
            echo "ref=${{ github.ref }}" >> "$GITHUB_OUTPUT"
          fi

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ steps.pick.outputs.ref }}

      - name: Install hooks (idempotent)
        shell: bash
        run: |
          set -euo pipefail
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config --local core.hooksPath tools/git-hooks
          bash tools/install-hooks.sh

      - name: Prepare
        id: prep
        shell: bash
        run: ci/git/prepare-ref.sh "${{ steps.pick.outputs.ref }}" "$GITHUB_OUTPUT"


      - name: Run risk update
        if: ${{ inputs.dry_run == false }}
        shell: bash
        run: |
            set -euo pipefail
            : > "$RISK_LOG_PATH"                       # ensure file exists
            chmod +x ./bin/risk_pull.sh || true
            DISABLE_HOOKS=0 bash ./bin/risk_pull.sh 2>&1 | tee -a "$RISK_LOG_PATH"
  


      - name: Dry-run plan
        if: ${{ inputs.dry_run }}
        shell: bash
        run: |
          set -euo pipefail
          . ci/git/lib-risk.sh || { echo "lib missing; cannot dry-run"; exit 66; }
          risk_plan_print

      - name: Show risk log
        shell: bash
        run: |
          if [[ -f "$RISK_LOG_PATH" ]]; then
            echo "--- risk log ---"
            cat "$RISK_LOG_PATH"
          else
            echo "no risk log produced"
          fi

      - name: Upload risk log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: risk-log
          path: ${{ env.RISK_LOG_PATH }}
          if-no-files-found: warn


