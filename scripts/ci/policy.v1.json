{
  "version": "1",
  "layers": {
    "util": 0,
    "lib": 1,
    "bin": 2
  },
  "classifiers": {
    "bin": ["^bin/"],
    "lib": ["^lib/"],
    "util": ["^util/"],
    "test": ["^test/", "^system-test/"],
    "system": ["^system/", "^infra/"],
    "ci": ["^ci/", "^\\.github/"],
    "config": ["^config/"]
  },
  "fileset": {
    "include": ["\\.sh$"],
    "exclude": ["^vendor/", "^third_party/", "^\\.git/"]
  },
  "waiver_annotation": "boundary:\\s*allow",
  "edge_rules": {
    "special_targets": {
      "TEST": ["test"],
      "SYS": ["system"]
    },
    "layer_delta": {
      "SAME": { "op": "==", "value": 0 },
      "DOWN1": { "op": "==", "value": 1 },
      "DOWN2": { "op": ">=", "value": 2 },
      "UP1": { "op": "==", "value": -1 },
      "UP2": { "op": "<=", "value": -2 }
    }
  },
  "dfa": {
    "start": "OK",
    "accepting": ["OK"],
    "states": {
      "OK": {
        "SAME": "OK",
        "DOWN1": "OK",
        "DOWN2": "REJECT",
        "UP1": "REJECT",
        "UP2": "REJECT",
        "TEST": "REJECT",
        "SYS": "REJECT"
      },
      "REJECT": { "*": "REJECT" }
    }
  },
  "reject_reasons": {
    "DOWN2": "skip one or more layers (e.g., bin→util).",
    "UP1": "upward import (e.g., util→lib or lib→bin).",
    "UP2": "multi-level upward import (e.g., util→bin).",
    "TEST": "runtime code must not import tests.",
    "SYS": "runtime code must not import system/infra.",
    "UNCLASSIFIED": "unable to classify edge target."
  },
  "policy_exceptions": {
    "from_categories_ignored": ["test", "ci"],
    "targets_ignored": []
  }
}

